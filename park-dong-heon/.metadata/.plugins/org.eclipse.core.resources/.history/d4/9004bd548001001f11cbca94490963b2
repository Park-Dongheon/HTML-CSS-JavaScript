package quiz;

import java.util.Random;
import java.util.Scanner;

//class PrimeNumber {
//	
//}

public class MatrixCalc {
	
	private int[][] matrix =  {{ 1, 2, 3},
						 { 4, 5, 6},
						 { 7, 8, 9}};
	
	private void getMatrix() {
		Scanner sc = new Scanner(System.in);
		
//		for(int i = 0; i < matrix.length; i++) {
//			for(int j = 0; j < matrix.length; j++) {
//				System.out.print(matrix[i][j] + " ");
//			}
//			System.out.println();
//		}
		
//		System.out.println();
		
		System.out.print("행을 입력하시요 : ");
		int n = sc.nextInt();
		System.out.print("열을 입력하시요 : ");
		int m = sc.nextInt();
		
		matrix = new int[n][m];
		
//		행렬 입력(무작위 random값(1~9) 입력)
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				matrix[i][j] = (int) (Math.random() * 9)+1;
			}
		}
		sc.close();	
	}
	
	public void work(boolean flag) { 
		if(flag) getMatrix();
		
		int n = matrix.length;
		int m = matrix[0].length;
		
		
//		입력값 행렬 출력
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				System.out.print(matrix[i][j] + " ");
			}
			System.out.println();
		}
		System.out.println();
		
//		가로(열)의 합, 중첩 반복문 matrix의 각 행마다 열의 합을 계산·출력, n행 m열의 2차원 배열, 각 요소는 정수형
//		바깥쪽 반복문 for(int i=0; i < n; i++) 행을 순회, i변수는 현재 처리 중인 행의 인덱스
//		안쪽 반복문 for(int j=0; j < m; j++) 해댕 행의 각 열을 순회, j변수는 열의 인덱스
		for(int i = 0; i < n; i++) {
			int sum = 0;				// 각 행 마다 sum 변수의 값을 0으로 초기화
			for(int j = 0; j < m; j++) {
				sum += matrix[i][j];			// 한 행의 합, sum 변수에 한 행의 각 요소를 누적 합
			}
			System.out.println(i+1 + "행의 열의 총합 : " + sum);		// 한 행의 합을 출력, 열의 인덱스 범위 m까지 반복 순회 후 출력 
		}
		
		System.out.println();
		
		
//		세로(행)의 합, 열의 변수 j가 인덱스 값(0~m-1)까지의 값이 
		for(int j = 0; j < m ; j++) {
			int sum = 0;
			for(int i = 0; i < n ; i++) {
				sum += matrix[i][j];
			}
			System.out.println(j+1 + "열의 행의 총합 : " + sum);
		}
	}
}
